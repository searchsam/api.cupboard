
type Order @model {
    id: ID!
    status: Int!
    deadline: DateTime!
    createdAt: DateTime! @rename(attribute: "created_at")
    updatedAt: DateTime! @rename(attribute: "updated_at")
    pantry: Pantry! @hasOne
    requests: [Request!]! @hasMany
    user: User! @belongsTo
}

enum OrderStatus {
    COMPLETED @enum(value: 0)
    ACTIVE @enum(value: 1)
}

input CreateOrderInput {
    deadline: Date!
}

extend type Query {
    orders(orderBy: [OrderByClause!] @orderBy): [Order!]! @all
}

extend type Mutation @middleware(checks: ["auth:api"]) {
    createOrder(deadline: Date!): Order @field(resolver: "OrderMutator@create")
}
